title:
  original: ' Set operations for data tables '
  translation: ~
description:
  original: |2
      Similar to base R set functions, \code{union}, \code{intersect}, \code{setdiff} and \code{setequal} but for \code{data.table}s. Additional \code{all} argument controls how duplicated rows are handled. Functions \code{fintersect}, \code{setdiff} (\code{MINUS} or \code{EXCEPT} in SQL) and \code{funion} are meant to provide functionality of corresponding SQL operators. Unlike SQL, data.table functions will retain row order.
  translation: ~
arguments:
  x, y:
    original: \code{data.table}s.
    translation: ~
  all:
    original: "Logical. Default is \\code{FALSE} and removes duplicate rows on the
      result. When \\code{TRUE}, if there are \\code{xn} copies of a particular row
      in \\code{x} and \\code{yn} copies of the same row in \\code{y}, then:\n\t  \\itemize{\n\t
      \   \\item\\code{fintersect} will return \\code{min(xn, yn)} copies of that
      row.\n\t    \\item\\code{fsetdiff} will return \\code{max(0, xn-yn)} copies
      of that row.\n\t    \\item\\code{funion} will return \\code{xn+yn} copies of
      that row.\n\t    \\item\\code{fsetequal} will return \\code{FALSE} unless \\code{xn
      == yn}.\n\t  }\n\t"
    translation: ~
details:
  original: |2
      \code{bit64::integer64} columns are supported but not \code{complex} and \code{list}, except for \code{funion}.
  translation: ~
value:
  original: |2
        A data.table in case of \code{fintersect}, \code{funion} and \code{fsetdiff}. Logical \code{TRUE} or \code{FALSE} for \code{fsetequal}.
  translation: ~
seealso:
  original: |2
     \code{\link{data.table}}, \code{\link{rbindlist}}, \code{\link{all.equal.data.table}}, \code{\link{unique}}, \code{\link{duplicated}}, \code{\link{uniqueN}}, \code{\link{anyDuplicated}}
  translation: ~
references:
  original: |
    \url{https://db.apache.org/derby/papers/Intersect-design.html}
  translation: ~
examples:
  original: |
    x = data.table(c(1,2,2,2,3,4,4))
    x2 = data.table(c(1,2,3,4)) # same set of rows as x
    y = data.table(c(2,3,4,4,4,5))
    fintersect(x, y)            # intersect
    fintersect(x, y, all=TRUE)  # intersect all
    fsetdiff(x, y)              # except
    fsetdiff(x, y, all=TRUE)    # except all
    funion(x, y)                # union
    funion(x, y, all=TRUE)      # union all
    fsetequal(x, x2, all=FALSE) # setequal
    fsetequal(x, x2)            # setequal all
  translation: ~
untranslatable:
- alias
- name
- keyword
- concept
- usage
